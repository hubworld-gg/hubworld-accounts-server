extend type Query {
  me: User
  userById(id: ID!): User
  usersBySearch(search: String!): [User!]
  userByUsername(username: String!): User
}

type User @key(fields: "id") {
  id: ID!
  displayName: String!
  username: String!
  about: About!
}

type About {
  description: String
  socialAccounts: [SocialLink!]
}

enum LinkType {
  TWITCH
  MIXER
  DISCORD
  YOUTUBE
  FACEBOOK
  STEAM
  ORIGIN
  UPLAY
  BATTLENET
  RIOT
  PLAIN
}

type SocialLink {
  type: LinkType!
  url: String!
  name: String!
}

extend type Mutation {
  createUser(input: CreateUserInput!): CreateUserPayload
}

input CreateUserInput {
  user: UserInput!
}

input UserInput {
  displayName: String!
  username: String!
  about: AboutInput
}

input AboutInput {
  description: String
  socialAccounts: [SocialAccountInput!]
}

input SocialAccountInput {
  type: LinkType!
  url: String!
  name: String!
}

type CreateUserPayload {
  user: User
}
